name: Cross-platform Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-linux:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, windows]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64  # Go doesn't support windows/arm64 well
    steps:
      - uses: actions/checkout@v3

      - uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Install dependencies for linux/arm64
        if: matrix.goos == 'linux' && matrix.goarch == 'arm64'
        run: |
          sudo dpkg --add-architecture arm64
          sudo apt-get update
          sudo apt-get install -y libudev-dev:arm64 udev:arm64

      - name: Install dependencies for linux/amd64
        if: matrix.goos == 'linux' && matrix.goarch == 'amd64'
        run: |
          sudo dpkg --add-architecture arm64
          sudo apt-get update
          sudo apt-get install -y libudev-dev udev


      - name: Build binary
        env:
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          mkdir -p dist
          go build -v ./config
          go build -v ./lib
          cd lcli
          go build -o ../dist/lcli-${GOOS}-${GOARCH}${{ matrix.goos == 'windows' && '.exe' || '' }}
          cd ../lcui
          go build -o ../dist/lcli-${GOOS}-${GOARCH}${{ matrix.goos == 'windows' && '.exe' || '' }}
  # build-macos:
  #   runs-on: macos-latest
  #   steps:
  #     - uses: actions/checkout@v3

  #     - uses: actions/setup-go@v5
  #       with:
  #         go-version: '1.21'

  #     - name: Install Fyne and build
  #       run: |
  #         brew install fyne
  #         go install fyne.io/fyne/v2/cmd/fyne@latest
  #         fyne package -os darwin -icon Icon.png
  #         mv myapp.app dist/myapp-darwin.app

#   release:
#     needs: [build-linux, build-macos]
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v3

#       - name: Download all artifacts
#         uses: actions/download-artifact@v3
#         with:
#           path: dist

#       - name: Upload release binaries
#         uses: softprops/action-gh-release@v2
#         with:
#           files: dist/**
#         env:
#           GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}